#include "maxcurvature.h"
#include <opencv2/highgui/highgui.hpp>
#include <iostream>

int main()
{
	cv::Mat finger = cv::imread("finger.png", CV_LOAD_IMAGE_GRAYSCALE);

//	cv::Mat finger = (cv::Mat_<uchar>(16,16) <<
//   255,     1,     2,   252,   251,     5,     6,   248,   247,     9,    10,   244,   243,   13,    14,   240,
//    16,   238,   237,    19,    20,   234,   233,    23,    24,   230,   229,    27,    28,  226,   225,    31,
//    32,   222,   221,    35,    36,   218,   217,    39,    40,   214,   213,    43,    44,  210,   209,    47,
//   207,    49,    50,   204,   203,    53,    54,   200,   199,    57,    58,   196,   195,   61,    62,   192,
//   191,    65,    66,   188,   187,    69,    70,   184,   183,    73,    74,   180,   179,   77,    78,   176,
//    80,   174,   173,    83,    84,   170,   169,    87,    88,   166,   165,    91,    92,  162,   161,    95,
//    96,   158,   157,    99,   100,   154,   153,   103,   104,   150,   149,   107,   108,  146,   145,   111,
//   143,   113,   114,   140,   139,   117,   118,   136,   135,   121,   122,   132,   131,  125,   126,   128,
//   127,   129,   130,   124,   123,   133,   134,   120,   119,   137,   138,   116,   115,  141,   142,   112,
//   144,   110,   109,   147,   148,   106,   105,   151,   152,   102,   101,   155,   156,   98,    97,   159,
//   160,    94,    93,   163,   164,    90,    89,   167,   168,    86,    85,   171,   172,   82,    81,   175,
//    79,   177,   178,    76,    75,   181,   182,    72,    71,   185,   186,    68,    67,  189,   190,    64,
//    63,   193,   194,    60,    59,   197,   198,    56,    55,   201,   202,    52,    51,  205,   206,    48,
//   208,    46,    45,   211,   212,    42,    41,   215,   216,    38,    37,   219,   220,   34,    33,   223,
//   224,    30,    29,   227,   228,    26,    25,   231,   232,    22,    21,   235,   236,   18,    17,   239,
//    15,   241,   242,    12,    11,   245,   246,     8,     7,   249,   250,     4,     3,  253,   254,     0
//         );
	cv::resize(finger, finger, cv::Size(), 0.5, 0.5);
	cv::Mat mask = cv::Mat::ones(finger.size(), CV_8U);         // Locus space


	cv::Ptr<cv::CLAHE> clahe = cv::createCLAHE();
	clahe->setClipLimit(3);

	cv::Mat dst;
	clahe->apply(finger,dst);

	cv::imshow("orig", finger);
	cv::imshow("normalized", dst);
	cv::Mat result, result2;
	MaxCurvature(finger, result, mask, 1);
	MaxCurvature(dst, result2, mask, 1);

	cv::imshow("pes", result);
	cv::imshow("pes2", result2);
	cv::waitKey(0);
}
